"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3110],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return y}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),d=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=d(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},s=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=d(t),y=o,b=s["".concat(c,".").concat(y)]||s[y]||u[y]||a;return t?n.createElement(b,i(i({ref:r},p),{},{components:t})):n.createElement(b,i({ref:r},p))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=s;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7566:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],l={},c="KeyboardControllerView",d={unversionedId:"api/keyboard-controller-view",id:"api/keyboard-controller-view",title:"KeyboardControllerView",description:"A plain react-native View with some additional methods and props. Used internally in KeyboardProvider",source:"@site/docs/api/keyboard-controller-view.md",sourceDirName:"api",slug:"/api/keyboard-controller-view",permalink:"/react-native-keyboard-controller/docs/api/keyboard-controller-view",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/keyboard-controller-view.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useReanimatedKeyboardAnimation",permalink:"/react-native-keyboard-controller/docs/api/hooks/use-reanimated-keyboard-animation"},next:{title:"KeyboardController",permalink:"/react-native-keyboard-controller/docs/api/keyboard-controller"}},p={},u=[{value:"Props",id:"props",level:2},{value:"<code>onKeyboardMove</code>",id:"onkeyboardmove",level:4},{value:"<code>statusBarTranslucent</code>",id:"statusbartranslucent",level:4}],s={toc:u};function y(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"keyboardcontrollerview"},"KeyboardControllerView"),(0,a.kt)("p",null,"A plain react-native ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," with some additional methods and props. Used internally in ",(0,a.kt)("a",{parentName:"p",href:"/react-native-keyboard-controller/docs/api/keyboard-provider"},"KeyboardProvider")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h4",{id:"onkeyboardmove"},(0,a.kt)("inlineCode",{parentName:"h4"},"onKeyboardMove")),(0,a.kt)("p",null,"A callback function which is fired every time, when keyboard changes its position on the screen."),(0,a.kt)("h4",{id:"statusbartranslucent"},(0,a.kt)("inlineCode",{parentName:"h4"},"statusBarTranslucent")),(0,a.kt)("p",null,"A boolean prop to indicate whether ",(0,a.kt)("inlineCode",{parentName:"p"},"StatusBar")," should be translucent on ",(0,a.kt)("inlineCode",{parentName:"p"},"Android")," or not."))}y.isMDXComponent=!0}}]);