"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4080],{1885:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"fabric","metadata":{"permalink":"/react-native-keyboard-controller/blog/fabric","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-09-22-fabric/index.md","source":"@site/blog/2022-09-22-fabric/index.md","title":"Version 1.2.0 with new architecture support","description":"I\'m glad to announce, that new upcoming release 1.2.0 brings a support for new react native architecture \ud83d\ude0e","date":"2022-09-22T00:00:00.000Z","formattedDate":"September 22, 2022","tags":[{"label":"react-native","permalink":"/react-native-keyboard-controller/blog/tags/react-native"},{"label":"release","permalink":"/react-native-keyboard-controller/blog/tags/release"},{"label":"new architecture","permalink":"/react-native-keyboard-controller/blog/tags/new-architecture"},{"label":"fabric","permalink":"/react-native-keyboard-controller/blog/tags/fabric"},{"label":"turbo modules","permalink":"/react-native-keyboard-controller/blog/tags/turbo-modules"}],"readingTime":0.86,"hasTruncateMarker":true,"authors":[{"name":"Kirill Zyusko","title":"Library author","url":"https://github.com/kirillzyusko","imageURL":"https://github.com/kirillzyusko.png","key":"kirill"}],"frontMatter":{"slug":"fabric","title":"Version 1.2.0 with new architecture support","authors":["kirill"],"tags":["react-native","release","new architecture","fabric","turbo modules"]},"nextItem":{"title":"React Native meets smooth keyboard animations","permalink":"/react-native-keyboard-controller/blog/welcome"}},"content":"I\'m glad to announce, that new upcoming release `1.2.0` brings a support for new react native architecture \ud83d\ude0e\\n\\nFortunately this library is backward compatible with old architecture and will be compiled conditionally depending on which architecture you are using. So don\'t be afraid of updating it to the latest version - it doesn\'t have any breaking changes!\\n\\n![react native logo](./react-native.png)\\n\\n\x3c!--truncate--\x3e\\n\\nThe decision to add support for a new architecture (to prioritize a new architecture adoption over other features) was made in order to understand all peculiarities of the new architecture and to discover its possibilities. Hopefully such knowledge can help add new features for the library in the future.\\n\\nObviously, the migration process will take some time for other libraries, so future versions of this library will still support two architectures. When most other open source libraries will be migrated to the new architecture and the new architecture becomes the standard in the react native ecosystem, then support for the old architecture will be removed.\\n\\nStay tuned for future updates! \ud83d\ude0a"},{"id":"welcome","metadata":{"permalink":"/react-native-keyboard-controller/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-22-welcome/index.mdx","source":"@site/blog/2022-06-22-welcome/index.mdx","title":"React Native meets smooth keyboard animations","description":"Many flagship applications that are written natively (such as Telegram, Instagram, etc.) use the full power of platform-specific native APIs (iOS, Android) to make transitions between opening/closing the keyboard animated and smooth.","date":"2022-06-22T00:00:00.000Z","formattedDate":"June 22, 2022","tags":[{"label":"react-native","permalink":"/react-native-keyboard-controller/blog/tags/react-native"},{"label":"keyboard","permalink":"/react-native-keyboard-controller/blog/tags/keyboard"},{"label":"animation","permalink":"/react-native-keyboard-controller/blog/tags/animation"}],"readingTime":1.19,"hasTruncateMarker":true,"authors":[{"name":"Kirill Zyusko","title":"Library author","url":"https://github.com/kirillzyusko","imageURL":"https://github.com/kirillzyusko.png","key":"kirill"}],"frontMatter":{"slug":"welcome","title":"React Native meets smooth keyboard animations","authors":["kirill"],"tags":["react-native","keyboard","animation"]},"prevItem":{"title":"Version 1.2.0 with new architecture support","permalink":"/react-native-keyboard-controller/blog/fabric"}},"content":"Many flagship applications that are written natively (such as `Telegram`, `Instagram`, etc.) use the full power of platform-specific native APIs (`iOS`, `Android`) to make transitions between opening/closing the keyboard animated and smooth.\\n\\nUnfortunately, in `react-native` this aspect was given little attention and all `react-native` applications were suffering because of that - animations were rough, you couldn\'t write cross-platform code because some keyboard events were not available, etc. But with the advent of this library, everything changes... \ud83d\ude0e\\n\\nimport Lottie from \'lottie-react\';\\nimport lottie from \'../../src/components/HomepageFeatures/transform.json\';\\n\\n<div style={{ display: \'flex\', justifyContent: \'center\', marginBottom: 20 }}>\\n<Lottie animationData={lottie} style={{ width: 400, height: 400 }} loop />\\n</div>\\n\\n\x3c!--truncate--\x3e\\n\\nThe purpose of this library was utilizing all power of native API and at the same time provide a universal way in `react-native` to deal with it (allowing to use some platforms advanced technics if needed). Thus this library allows you to track each keyboard frame movement, and create corresponding reactions (move elements accordingly).\\n\\nThe first release of this library brings missing `keyboardWillShow`/`keyboardWillHide` events on `Android` making `events` module fully cross-platform as well as adding a way to use `Animated.Value` for managing keyboard frames.\\n\\nIn further releases the API will be enhanced:\\n- support will be added for interactive keyboard dismissing (on Android)\\n- the library will be rewritten to new `Fabric` architecture\\n- maybe some components, such as `KeyboardAvoidingView`/`KeyboardAwareScrollView` will be available here with better performance and animations.\\n\\nStay tuned! \ud83d\ude0a"}]}')}}]);