{"version":3,"names":["KeyboardControllerViewAnimated","Reanimated","createAnimatedComponent","Animated","KeyboardControllerView","defaultContext","animated","progress","Value","height","reanimated","value","KeyboardContext","React","createContext","useKeyboardAnimation","useResizeMode","context","useContext","useReanimatedKeyboardAnimation","useAnimatedKeyboardHandler","handlers","dependencies","doDependenciesDiffer","useHandler","useEvent","event","onKeyboardMove","eventName","endsWith","styles","StyleSheet","create","container","flex","hidden","display","position","KeyboardProvider","children","statusBarTranslucent","useRef","current","progressSV","useSharedValue","heightSV","useMemo","style","transform","translateX","translateY","nativeEvent","useNativeDriver","handler"],"sources":["animated.tsx"],"sourcesContent":["import React, { useContext, useMemo, useRef } from 'react';\nimport { Animated, StyleSheet, ViewStyle } from 'react-native';\nimport Reanimated, {\n  useEvent,\n  useHandler,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  EventWithName,\n  KeyboardControllerProps,\n  KeyboardControllerView,\n  NativeEvent,\n  useResizeMode,\n} from './native';\n\nconst KeyboardControllerViewAnimated = Reanimated.createAnimatedComponent(\n  Animated.createAnimatedComponent(\n    KeyboardControllerView\n  ) as React.FC<KeyboardControllerProps>\n);\n\ntype AnimatedContext = {\n  progress: Animated.Value;\n  height: Animated.Value;\n};\ntype ReanimatedContext = {\n  progress: Reanimated.SharedValue<number>;\n  height: Reanimated.SharedValue<number>;\n};\ntype KeyboardAnimationContext = {\n  animated: AnimatedContext;\n  reanimated: ReanimatedContext;\n};\nconst defaultContext: KeyboardAnimationContext = {\n  animated: {\n    progress: new Animated.Value(0),\n    height: new Animated.Value(0),\n  },\n  reanimated: {\n    progress: { value: 0 },\n    height: { value: 0 },\n  },\n};\nexport const KeyboardContext = React.createContext(defaultContext);\n\nexport const useKeyboardAnimation = (): AnimatedContext => {\n  useResizeMode();\n  const context = useContext(KeyboardContext);\n\n  return context.animated;\n};\n\nexport const useReanimatedKeyboardAnimation = (): ReanimatedContext => {\n  useResizeMode();\n  const context = useContext(KeyboardContext);\n\n  return context.reanimated;\n};\n\nfunction useAnimatedKeyboardHandler<TContext extends Record<string, unknown>>(\n  handlers: {\n    onKeyboardMove?: (e: NativeEvent, context: TContext) => void;\n  },\n  dependencies?: ReadonlyArray<unknown>\n) {\n  const { context, doDependenciesDiffer } = useHandler(handlers, dependencies);\n\n  return useEvent(\n    (event: EventWithName<NativeEvent>) => {\n      'worklet';\n      const { onKeyboardMove } = handlers;\n\n      if (onKeyboardMove && event.eventName.endsWith('onKeyboardMove')) {\n        onKeyboardMove(event, context);\n      }\n    },\n    ['onKeyboardMove'],\n    doDependenciesDiffer\n  );\n}\n\ntype Styles = {\n  container: ViewStyle;\n  hidden: ViewStyle;\n};\n\nexport const styles = StyleSheet.create<Styles>({\n  container: {\n    flex: 1,\n  },\n  hidden: {\n    display: 'none',\n    position: 'absolute',\n  },\n});\n\ntype KeyboardProviderProps = {\n  children: React.ReactNode;\n  /**\n   * Set the value to `true`, if you use translucent status bar on Android.\n   * If you already control status bar translucency via `react-native-screens`\n   * or `StatusBar` component from `react-native`, you can ignore it.\n   * Defaults to `false`.\n   *\n   * @see https://github.com/kirillzyusko/react-native-keyboard-controller/issues/14\n   * @platform android\n   */\n  statusBarTranslucent?: boolean;\n};\n\nexport const KeyboardProvider = ({\n  children,\n  statusBarTranslucent,\n}: KeyboardProviderProps) => {\n  const progress = useRef(new Animated.Value(0)).current;\n  const height = useRef(new Animated.Value(0)).current;\n  const progressSV = useSharedValue(0);\n  const heightSV = useSharedValue(0);\n  const context = useMemo(\n    () => ({\n      animated: { progress: progress, height: height },\n      reanimated: { progress: progressSV, height: heightSV },\n    }),\n    []\n  );\n  const style = useMemo(\n    () => [\n      styles.hidden,\n      { transform: [{ translateX: height }, { translateY: progress }] },\n    ],\n    []\n  );\n\n  const onKeyboardMove = useMemo(\n    () =>\n      Animated.event(\n        [\n          {\n            nativeEvent: {\n              progress,\n              height,\n            },\n          },\n        ],\n        { useNativeDriver: true }\n      ),\n    []\n  );\n\n  const handler = useAnimatedKeyboardHandler(\n    {\n      onKeyboardMove: (event: NativeEvent) => {\n        'worklet';\n        progressSV.value = event.progress;\n        heightSV.value = event.height;\n      },\n    },\n    []\n  );\n\n  return (\n    <KeyboardContext.Provider value={context}>\n      <KeyboardControllerViewAnimated\n        onKeyboardMoveReanimated={handler}\n        onKeyboardMove={onKeyboardMove}\n        statusBarTranslucent={statusBarTranslucent}\n        style={styles.container}\n      >\n        <>\n          <Animated.View\n            // we are using this small hack, because if the component (where\n            // animated value has been used) is unmounted, then animation will\n            // stop receiving events (seems like it's react-native optimization).\n            // So we need to keep a reference to the animated value, to keep it's\n            // always mounted (keep a reference to an animated value).\n            //\n            // To test why it's needed, try to open screen which consumes Animated.Value\n            // then close it and open it again (for example 'Animated transition').\n            style={style}\n          />\n          {children}\n        </>\n      </KeyboardControllerViewAnimated>\n    </KeyboardContext.Provider>\n  );\n};\n"],"mappings":"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"}