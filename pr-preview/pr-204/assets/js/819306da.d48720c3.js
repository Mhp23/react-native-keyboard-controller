"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6700],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),y=a,b=d["".concat(c,".").concat(y)]||d[y]||u[y]||n;return r?o.createElement(b,i(i({ref:t},p),{},{components:r})):o.createElement(b,i({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<n;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7051:(e,t,r)=>{r.d(t,{Z:()=>a});var o=r(7294);function a(e){let{style:t,src:r}=e;return o.createElement("dotlottie-player",{autoplay:!0,loop:!0,mode:"normal",src:r,style:t})}r(412).Z.canUseDOM&&r(4410)},9836:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var o=r(7462),a=(r(7294),r(3905)),n=r(7051);const i={slug:"interactive-keyboard",title:"Interactive keyboard support",authors:["kirill"],tags:["react-native","keyboard","interactive","android","ios"],keywords:["react-native-keyboard-controller","interactive keyboard","swipe to dismiss keyboard","control keyboard position via gesture"]},l=void 0,c={permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/interactive-keyboard",editUrl:"https://github.com/kirillzyusko/react-native-keyboard-controller/tree/main/docs/blog/2023-04-10-interactive-keyboard/index.mdx",source:"@site/blog/2023-04-10-interactive-keyboard/index.mdx",title:"Interactive keyboard support",description:"I'm excited to announce that the upcoming release of react-native-keyboard-controller, version 1.5.0, will include a new feature that allows users to control the position of the keyboard on the screen via gestures. This new interactive keyboard feature will make it easier for users to interact with the keyboard in a more natural and intuitive way, improving the overall user experience of your React Native app.",date:"2023-04-10T00:00:00.000Z",formattedDate:"April 10, 2023",tags:[{label:"react-native",permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/tags/react-native"},{label:"keyboard",permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/tags/keyboard"},{label:"interactive",permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/tags/interactive"},{label:"android",permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/tags/android"},{label:"ios",permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/tags/ios"}],readingTime:.995,hasTruncateMarker:!0,authors:[{name:"Kirill Zyusko",title:"Library author",url:"https://github.com/kirillzyusko",imageURL:"https://github.com/kirillzyusko.png",key:"kirill"}],frontMatter:{slug:"interactive-keyboard",title:"Interactive keyboard support",authors:["kirill"],tags:["react-native","keyboard","interactive","android","ios"],keywords:["react-native-keyboard-controller","interactive keyboard","swipe to dismiss keyboard","control keyboard position via gesture"]},nextItem:{title:"Version 1.4.0 with new hook",permalink:"/react-native-keyboard-controller/pr-preview/pr-204/blog/new-hook"}},s={authorsImageUrls:[void 0]},p=[],u={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"I'm excited to announce that the upcoming release of ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native-keyboard-controller"),", version ",(0,a.kt)("inlineCode",{parentName:"p"},"1.5.0"),", will include a new feature that allows users to control the position of the keyboard on the screen via gestures. This new interactive keyboard feature will make it easier for users to interact with the keyboard in a more natural and intuitive way, improving the overall user experience of your React Native app."),(0,a.kt)("div",{style:{display:"flex",justifyContent:"center",marginBottom:20}},(0,a.kt)(n.Z,{src:"img/interactive.lottie",style:{width:400,height:400},mdxType:"Lottie"})))}d.isMDXComponent=!0}}]);