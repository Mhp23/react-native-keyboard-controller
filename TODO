# ToDo

- (x) restore TextInput switching functionality
- (x) detect and scroll TextInput grows
- (x) remove old code from fabric/unify examples
- (x) "grow" is not scrolling on the extended height after few clicks <- update scrollPosition after maybeScroll
- (?) focus -> change focus -> blur ==> movement of content is very small
- (?) when dispatching focusInput -> compare by height? because keyboardWillShow triggers when user types first letter <- we anyway plan to update layout when user types letters?
- (x) contentContainerStyle -> paddingBottom should depend on keyboard size <- added additional view
- (x) focus on 3, focus on 5 -> scroll looks strange <- persist scroll on tag changes as well
- (x) jest -> add new mocks + new unit tests
- (x) improve events precision (int -> float, pageY, width точно float или double)
- (x) console.log("focus was changed -> scrolling") (even when keyboard appears) <- `!keyboardWillAppear` condition added
- (x) focus on field -> type any symbol -> close keyboard => no back transition animation <- memoize layout in local `layout` variable
- (x) android - dispatch event when keyboard changes size
- (x) be sure that after switching enabled/disabled several times only one event gets dispatched <- only single listener should be active (open app, disable/enable, focus input)
- (x) do not generate colors randomly (to cover by e2e tests later)
- scrollResponderScrollNativeHandleToKeyboard
- think about renaming FocusedInputLayoutChangedObserver -> FocusedInputObserver
- 
- send `null` when there is no input in focus
- const {update} = useReanimatedFocusedInput(); <- requires REA3
- crash on every file changes AwareScrollView/hot reload
- enable hook under feature flag?
- test paper/fabric iOS/Android
- open app -> focus on 8/9 fields -> content is not moving
- 8 -> 9 transitions (9 field is covered by keyboard)
- android: keyboard resize pushes content significantly
- sometimes `paddingBottom` is getting kind of freezed (i. e. keyboard is hidden, but padding is still present)
- replicate example to paper
- `y` on Android and from measure are diffferent
- focus on 3, then on 5 -> grow text input -> first grow scroll into incorrect position
