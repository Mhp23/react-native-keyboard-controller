<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kirillzyusko.github.io/react-native-keyboard-controller/blog</id>
    <title>Keyboard Controller Blog</title>
    <updated>2022-06-22T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kirillzyusko.github.io/react-native-keyboard-controller/blog"/>
    <subtitle>Keyboard Controller Blog</subtitle>
    <icon>https://kirillzyusko.github.io/react-native-keyboard-controller/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[React Native meets smooth keyboard animations]]></title>
        <id>welcome</id>
        <link href="https://kirillzyusko.github.io/react-native-keyboard-controller/blog/welcome"/>
        <updated>2022-06-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Many flagship applications that are written natively (such as Telegram, Instagram, etc.) use the full power of platform-specific native APIs (iOS, Android) to make transitions between opening/closing the keyboard animated and smooth.]]></summary>
        <content type="html"><![CDATA[<p>Many flagship applications that are written natively (such as <code>Telegram</code>, <code>Instagram</code>, etc.) use the full power of platform-specific native APIs (<code>iOS</code>, <code>Android</code>) to make transitions between opening/closing the keyboard animated and smooth.</p><p>Unfortunately, in <code>react-native</code> this aspect was given little attention and all <code>react-native</code> applications were suffering because of that - animations were rough, you couldn't write cross-platform code because some keyboard events were not available, etc. But with the advent of this library, everything changes... ðŸ˜Ž</p><div style="display:flex;justify-content:center;margin-bottom:20px"><div style="width:400px;height:400px"></div></div><p>The purpose of this library was utilizing all power of native API and at the same time provide a universal way in <code>react-native</code> to deal with it (allowing to use some platforms advanced technics if needed). Thus this library allows you to track each keyboard frame movement, and create corresponding reactions (move elements accordingly).</p><p>The first release of this library brings missing <code>keyboardWillShow</code>/<code>keyboardWillHide</code> events on <code>Android</code> making <code>events</code> module fully cross-platform as well as adding a way to use <code>Animated.Value</code> for managing keyboard frames.</p><p>In further releases the API will be enhanced:</p><ul><li>support will be added for interactive keyboard dismissing (on Android)</li><li>the library will be rewritten to new <code>Fabric</code> architecture</li><li>maybe some components, such as <code>KeyboardAvoidingView</code>/<code>KeyboardAwareScrollView</code> will be available here with better performance and animations.</li></ul><p>Stay tuned! ðŸ˜Š</p>]]></content>
        <author>
            <name>Kirill Zyusko</name>
            <uri>https://github.com/kirillzyusko</uri>
        </author>
        <category label="react-native" term="react-native"/>
        <category label="keyboard" term="keyboard"/>
        <category label="animation" term="animation"/>
    </entry>
</feed>